package nc.impl.hrta;

import nc.bs.framework.common.NCLocator;
import nc.impl.pub.ace.AceLeaveextrarestPubServiceImpl;
import nc.vo.ta.leaveextrarest.AggLeaveExtraRestVO;
import nc.vo.ta.leaveextrarest.LeaveExtraRestVO;
import nc.itf.bd.psn.psndoc.IPsndocQueryService;
import nc.itf.hrta.ILeaveextrarestMaintain;
import nc.itf.uap.IUAPQueryBS;
import nc.ui.querytemplate.querytree.IQueryScheme;
import nc.vo.bd.psn.PsnjobVO;
import nc.vo.hi.psndoc.PsnJobVO;
import nc.vo.hi.psndoc.PsnOrgVO;
import nc.vo.pub.BusinessException;
import nc.vo.pub.lang.UFLiteralDate;
import nc.vo.pubapp.pattern.exception.ExceptionUtils;

public class LeaveextrarestMaintainImpl extends AceLeaveextrarestPubServiceImpl implements
		ILeaveextrarestMaintain {

	@Override
	public void delete(AggLeaveExtraRestVO[] vos) throws BusinessException {
		super.pubdeleteBills(vos);
	}

	@Override
	public AggLeaveExtraRestVO[] insert(AggLeaveExtraRestVO[] vos) throws BusinessException {
		return super.pubinsertBills(vos);
	}

	@Override
	public AggLeaveExtraRestVO[] update(AggLeaveExtraRestVO[] vos) throws BusinessException {
		return super.pubupdateBills(vos);
	}

	@Override
	public AggLeaveExtraRestVO[] query(IQueryScheme queryScheme)
			throws BusinessException {
		return super.pubquerybills(queryScheme);
	}

	@Override
	public UFLiteralDate calculateExpireDateByWorkAge(String pk_psndoc,
			UFLiteralDate dateBeforeChange,UFLiteralDate billDate) throws BusinessException {

		IPsndocQueryService psnQuery = NCLocator.getInstance().lookup(IPsndocQueryService.class);
		PsnjobVO psnjobvo = psnQuery.queryPsnJobVOByPsnDocPK(pk_psndoc);
		IUAPQueryBS query = NCLocator.getInstance().lookup(IUAPQueryBS.class);
		PsnJobVO jobvo = (PsnJobVO) query.retrieveByPK(PsnJobVO.class, psnjobvo.getPk_psnjob());
		PsnOrgVO psnOrgVO = (PsnOrgVO) query.retrieveByPK(PsnOrgVO.class, jobvo.getPk_psnorg());
		UFLiteralDate workAgeStartDate = (UFLiteralDate) psnOrgVO.getAttributeValue("workagestartdate"); // 年资起算日
		UFLiteralDate maxLeaveDate = null;
		if (workAgeStartDate != null) {
			if (workAgeStartDate.toString().substring(4).equals("-02-29")) {
				maxLeaveDate = new UFLiteralDate(String.valueOf(dateBeforeChange
						.getYear())
						+ "-02-28");
				if (maxLeaveDate.before(billDate)) {
					maxLeaveDate = new UFLiteralDate(String.valueOf(dateBeforeChange.getYear() + 1)
							+ "-02-28");
				}
			} else {
				maxLeaveDate = new UFLiteralDate(String.valueOf(dateBeforeChange
						.getYear())
						+ workAgeStartDate.toString().substring(4)).getDateBefore(1);
				if (maxLeaveDate.before(billDate)) {
					maxLeaveDate = new UFLiteralDate(String.valueOf(dateBeforeChange.getYear() + 1)
							+ workAgeStartDate.toString().substring(4)).getDateBefore(1);
				}
			}

			return maxLeaveDate;
		} else {
			throw new BusinessException("外加补休日期按年资起算日计算错误，请检查员工组织关系年资起算日设定。");
		}
	
	}

}
